(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const r of t.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&n(r)}).observe(document,{childList:!0,subtree:!0});function s(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function n(e){if(e.ep)return;e.ep=!0;const t=s(e);fetch(e.href,t)}})();const i="https://kryptografia-api.wonderfulsand-657cf16a.polandcentral.azurecontainerapps.io",S=document.getElementById("encryption-form"),O=document.getElementById("plainText"),z=document.getElementById("algorithm"),$=document.getElementById("key"),D=document.getElementById("key-container"),I=document.getElementById("result"),x=document.getElementById("error"),P=document.getElementById("decryption-form"),H=document.getElementById("decryptionText"),T=document.getElementById("decryptionAlgorithm"),R=document.getElementById("decryptionKey"),j=document.getElementById("decryption-key-container"),u=document.getElementById("decryption-result"),B=document.getElementById("decryption-error"),F=document.getElementById("generate-rsa-button"),L=document.getElementById("rsa-result"),k=document.getElementById("rsa-error"),U=document.getElementById("steganography-form"),M=document.getElementById("steg-image"),A=document.getElementById("steg-message"),y=document.getElementById("steg-error"),v=document.getElementById("steg-success"),N=document.getElementById("steg-extract-form"),K=document.getElementById("steg-extract-image"),p=document.getElementById("steg-extract-result"),h=document.getElementById("steg-extract-error"),q=document.getElementById("image-in-image-form"),W=document.getElementById("host-image"),G=document.getElementById("hidden-image"),f=document.getElementById("image-in-image-error"),w=document.getElementById("image-in-image-success"),J=document.getElementById("extract-image-form"),X=document.getElementById("extract-image"),E=document.getElementById("extract-image-error"),b=document.getElementById("extract-image-success");console.log("api url",i);z.addEventListener("change",()=>{const a=z.value==="sha256";D.classList.toggle("hidden",a),$.toggleAttribute("required",!a)});T.addEventListener("change",()=>{const a=T.value==="sha256";j.classList.toggle("hidden",a),R.toggleAttribute("required",!a)});S.addEventListener("submit",async a=>{a.preventDefault(),I.classList.add("hidden"),x.classList.add("hidden");const o={plainText:O.value.trim(),algorithm:z.value.trim(),key:$.value.trim()};try{const s=await fetch(`${i}/Encryption/encrypt`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});if(!s.ok)throw new Error("Błąd serwera: "+s.statusText);const n=await s.json();I.classList.remove("hidden"),I.style.whiteSpace="pre-line",l(`Zaszyfrowany tekst: ${n.cipherText}, 
 Czas: ${n.metrics.elapsedMilliseconds}ms, 
 Ram: ${n.metrics.memoryUsedBytes}`,I)}catch(s){x.textContent=s.message,x.classList.remove("hidden")}});P.addEventListener("submit",async a=>{a.preventDefault(),u.classList.add("hidden"),B.classList.add("hidden");const o={plainText:H.value.trim(),algorithm:T.value.trim(),key:R.value.trim()};try{const s=await fetch(`${i}/Encryption/decrypt`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});if(!s.ok)throw new Error("Błąd serwera: "+s.statusText);const n=await s.json();u.innerHTML="",u.style.whiteSpace="pre-line",u.classList.remove("hidden"),l(`Odszyfrowana wiadomość: ${n.cipherText}, 
 Czas: ${n.metrics.elapsedMilliseconds}ms, Ram: ${n.metrics.memoryUsedBytes}`,u)}catch(s){B.textContent=s.message,B.classList.remove("hidden")}});F.addEventListener("click",async()=>{L.classList.add("hidden"),k.classList.add("hidden"),L.innerHTML="";try{const a=await fetch(`${i}/Encryption/generate-rsa-keys`,{method:"GET"});if(!a.ok)throw new Error("Błąd podczas generowania kluczy: "+a.statusText);const o=await a.json();L.innerHTML=`
      <div id="rsa-public" class="rsa-key-block"></div>
      <button id="toggle-private-key">Pokaż klucz prywatny</button>
      <div id="rsa-private" class="rsa-key-block hidden"></div>
    `,L.classList.remove("hidden");const s=document.getElementById("rsa-public"),n=document.getElementById("rsa-private"),e=document.getElementById("toggle-private-key");l(` Publiczny klucz RSA:
${o.publicKeyXml}`,s,10),n.textContent=` Prywatny klucz RSA:
${o.privateKeyXml}`,e.addEventListener("click",()=>{const t=n.classList.contains("hidden");n.classList.toggle("hidden"),e.textContent=t?"Ukryj klucz prywatny":"Pokaż klucz prywatny"})}catch(a){k.textContent=a.message,k.classList.remove("hidden")}});U.addEventListener("submit",async a=>{var e;a.preventDefault(),y.classList.add("hidden"),v.classList.add("hidden");const o=(e=M.files)==null?void 0:e[0],s=A.value.trim();if(!o||!s){y.textContent="Wymagany jest plik i wiadomość.",y.classList.remove("hidden");return}const n=new FormData;n.append("Image",o),n.append("Message",s);try{const t=await fetch(`${i}/steganography/embed`,{method:"POST",body:n});if(!t.ok)throw new Error("Błąd podczas przesyłania: "+t.statusText);const r=await t.blob(),m=URL.createObjectURL(r),d=document.createElement("a");d.href=m,d.download="steganography.png",d.click();const c=t.headers.get("Czas"),g=t.headers.get("Ram");console.log(c,g),v.style.whiteSpace="pre-line",v.classList.remove("hidden"),l(`Czas: ${c}ms, Ram: ${g}`,v)}catch(t){y.textContent=t.message,y.classList.remove("hidden")}});N.addEventListener("submit",async a=>{var n;a.preventDefault(),p.classList.add("hidden"),h.classList.add("hidden"),p.innerHTML="";const o=(n=K.files)==null?void 0:n[0];if(!o){h.textContent="Wymagany jest plik PNG.",h.classList.remove("hidden");return}const s=new FormData;s.append("Image",o);try{const e=await fetch(`${i}/steganography/extract`,{method:"POST",body:s});if(!e.ok)throw new Error("Błąd podczas odczytu wiadomości: "+e.statusText);const t=await e.json();p.style.whiteSpace="pre-line",p.classList.remove("hidden"),l(`Ukryta wiadomość:
${t.cipherText},
 Czas: ${t.metrics.elapsedMilliseconds} ms,
Ram: ${t.metrics.memoryUsedBytes}`,p,15)}catch(e){h.textContent=e.message,h.classList.remove("hidden")}});q.addEventListener("submit",async a=>{var e,t;a.preventDefault(),f.classList.add("hidden"),w.classList.add("hidden");const o=(e=W.files)==null?void 0:e[0],s=(t=G.files)==null?void 0:t[0];if(!o||!s){f.textContent="Oba obrazy są wymagane.",f.classList.remove("hidden");return}const n=new FormData;n.append("HostImage",o),n.append("HiddenImage",s);try{const r=await fetch(`${i}/steganography/embed-image`,{method:"POST",body:n});if(!r.ok)throw new Error("Błąd podczas przesyłania: "+r.statusText);const m=await r.blob(),d=URL.createObjectURL(m),c=document.createElement("a");c.href=d,c.download="hidden-image.png",c.click();const g=r.headers.get("Czas"),C=r.headers.get("Ram");console.log(g,C),w.style.whiteSpace="pre-line",w.classList.remove("hidden"),l(`Czas: ${g}ms, Ram: ${C}`,w)}catch(r){f.textContent=r.message,f.classList.remove("hidden")}});J.addEventListener("submit",async a=>{var n;a.preventDefault(),E.classList.add("hidden"),b.classList.add("hidden");const o=(n=X.files)==null?void 0:n[0];if(!o){E.textContent="Wymagany jest obraz.",E.classList.remove("hidden");return}const s=new FormData;s.append("Image",o);try{const e=await fetch(`${i}/steganography/extract-image`,{method:"POST",body:s});if(!e.ok)throw new Error("Błąd podczas odczytu obrazu: "+e.statusText);const t=await e.blob(),r=URL.createObjectURL(t),m=document.createElement("a");m.href=r,m.download="extracted.png",m.click();const d=e.headers.get("Czas"),c=e.headers.get("Ram");console.log(d,c),b.style.whiteSpace="pre-line",b.classList.remove("hidden"),l(`Czas: ${d}ms, Ram: ${c}`,b)}catch(e){E.textContent=e.message,E.classList.remove("hidden")}});function l(a,o,s=20){let n=0;const e=document.createElement("span");e.className="blinking-cursor",e.textContent="_";const t=document.createElement("span");o.innerHTML="",o.appendChild(t),o.appendChild(e);const r=()=>{n<a.length?(t.textContent+=a.charAt(n),n++,setTimeout(r,s)):e.remove()};r()}
